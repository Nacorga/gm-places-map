{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Marker } from 'src/app/models/marker.model';\nimport * as i0 from \"@angular/core\";\nexport let MarkersService = /*#__PURE__*/(() => {\n  class MarkersService {\n    constructor() {\n      this._$markers = new BehaviorSubject([]);\n      this.$markers = this._$markers.asObservable();\n    }\n\n    get markers() {\n      return this._$markers.getValue();\n    }\n\n    addMarker(place) {\n      var _a, _b;\n\n      this._$markers.next([...this.markers, new Marker({\n        lat: (_a = place.geometry) === null || _a === void 0 ? void 0 : _a.location.lat(),\n        lng: (_b = place.geometry) === null || _b === void 0 ? void 0 : _b.location.lng()\n      })]);\n    }\n\n    removeMarker(idx) {\n      const markers = this.markers;\n\n      this._$markers.next(markers.filter((_, i) => idx !== i));\n    }\n\n  }\n\n  MarkersService.ɵfac = function MarkersService_Factory(t) {\n    return new (t || MarkersService)();\n  };\n\n  MarkersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarkersService,\n    factory: MarkersService.ɵfac,\n    providedIn: 'root'\n  });\n  return MarkersService;\n})();","map":null,"metadata":{},"sourceType":"module"}