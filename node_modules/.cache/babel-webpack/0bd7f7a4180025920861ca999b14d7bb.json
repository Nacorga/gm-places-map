{"ast":null,"code":"import { PlaceEditorDialogComponent } from 'src/app/dialogs/place-editor-dialog/place-editor-dialog.component';\nimport { Place } from 'src/app/models/place.model';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/markers/markers.service\";\nimport * as i2 from \"src/app/services/places/places.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../../components/gm-autocomplete/gm-autocomplete.component\";\nimport * as i5 from \"../../components/places-list/places-list.component\";\nimport * as i6 from \"@angular/common\";\n\nconst _c0 = function () {\n  return [];\n};\n\nexport let PlacesViewComponent = /*#__PURE__*/(() => {\n  class PlacesViewComponent {\n    constructor(markersSrv, placesSrv, dialog) {\n      this.markersSrv = markersSrv;\n      this.placesSrv = placesSrv;\n      this.dialog = dialog;\n      this.$places = this.placesSrv.$places;\n    }\n\n    handlePlace(place) {\n      this.markersSrv.addMarker(place);\n      this.placesSrv.addPlace(new Place(place));\n    }\n\n    editPlace(idx) {\n      this.openPlaceEditor(idx);\n    }\n\n    removeItems(idx) {\n      this.placesSrv.removePlace(idx);\n      this.markersSrv.removeMarker(idx);\n    }\n\n    openPlaceEditor(placeIdx) {\n      const {\n        formatted_address,\n        customTitle\n      } = this.placesSrv.places[placeIdx];\n      this.dialog.open(PlaceEditorDialogComponent, {\n        data: {\n          placeIdx,\n          customTitle: customTitle || formatted_address\n        }\n      }).afterClosed().pipe(filter(res => !!res)).subscribe(res => {\n        this.placesSrv.updatePlaceTitle(placeIdx, res);\n      });\n    }\n\n  }\n\n  PlacesViewComponent.ɵfac = function PlacesViewComponent_Factory(t) {\n    return new (t || PlacesViewComponent)(i0.ɵɵdirectiveInject(i1.MarkersService), i0.ɵɵdirectiveInject(i2.PlacesService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  PlacesViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlacesViewComponent,\n    selectors: [[\"app-places-view\"]],\n    decls: 6,\n    vars: 4,\n    consts: [[1, \"places-view\"], [1, \"places-view__header\"], [3, \"placeChange\"], [1, \"places-view__list\"], [3, \"places\", \"edit\", \"remove\"]],\n    template: function PlacesViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"app-gm-autocomplete\", 2);\n        i0.ɵɵlistener(\"placeChange\", function PlacesViewComponent_Template_app_gm_autocomplete_placeChange_2_listener($event) {\n          return ctx.handlePlace($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"app-places-list\", 4);\n        i0.ɵɵlistener(\"edit\", function PlacesViewComponent_Template_app_places_list_edit_4_listener($event) {\n          return ctx.editPlace($event);\n        })(\"remove\", function PlacesViewComponent_Template_app_places_list_remove_4_listener($event) {\n          return ctx.removeItems($event);\n        });\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"places\", (tmp_0_0 = i0.ɵɵpipeBind1(5, 1, ctx.$places)) !== null && tmp_0_0 !== undefined ? tmp_0_0 : i0.ɵɵpureFunction0(3, _c0));\n      }\n    },\n    directives: [i4.GmAutocompleteComponent, i5.PlacesListComponent],\n    pipes: [i6.AsyncPipe],\n    styles: [\".places-view[_ngcontent-%COMP%]{overflow-y:auto;height:100%}.places-view__header[_ngcontent-%COMP%]{margin-bottom:.5rem}\"]\n  });\n  return PlacesViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}