{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/icon\";\nconst _c0 = [\"search\"];\nexport let GmAutocompleteComponent = /*#__PURE__*/(() => {\n  class GmAutocompleteComponent {\n    constructor(ngZone) {\n      this.ngZone = ngZone;\n      this.value = '';\n      this.placeChange = new EventEmitter();\n    }\n\n    ngAfterViewInit() {\n      this.initAutocomplete();\n    }\n\n    initAutocomplete() {\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {});\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          const place = autocomplete.getPlace();\n          this.placeChange.emit(place);\n          this.reset();\n        });\n      });\n    }\n\n    reset() {\n      this.searchElementRef.nativeElement.value = '';\n    }\n\n  }\n\n  GmAutocompleteComponent.ɵfac = function GmAutocompleteComponent_Factory(t) {\n    return new (t || GmAutocompleteComponent)(i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  GmAutocompleteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GmAutocompleteComponent,\n    selectors: [[\"app-gm-autocomplete\"]],\n    viewQuery: function GmAutocompleteComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchElementRef = _t.first);\n      }\n    },\n    inputs: {\n      label: \"label\",\n      disabled: \"disabled\",\n      value: \"value\"\n    },\n    outputs: {\n      placeChange: \"placeChange\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"gm-autocomplete\"], [\"appearance\", \"outline\", 1, \"form-field\"], [\"matInput\", \"\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", \"spellcheck\", \"off\", \"type\", \"text\", 3, \"disabled\", \"value\"], [\"search\", \"\"], [\"matSuffix\", \"\"]],\n    template: function GmAutocompleteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Search place\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2, 3);\n        i0.ɵɵelementStart(6, \"mat-icon\", 4);\n        i0.ɵɵtext(7, \"place\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"value\", ctx.value);\n      }\n    },\n    directives: [i1.MatFormField, i1.MatLabel, i2.MatInput, i3.MatIcon, i1.MatSuffix],\n    styles: [\".gm-autocomplete[_ngcontent-%COMP%]   .form-field[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return GmAutocompleteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}